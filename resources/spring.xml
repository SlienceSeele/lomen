<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.jeefw"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" p:location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
          p:driverClass="${jdbc.driver}"
          p:jdbcUrl="${jdbc.url}"
          p:user="${jdbc.username}"
          p:password="${jdbc.password}"
          p:acquireIncrement="${c3p0.acquireIncrement}"
          p:idleConnectionTestPeriod="${c3p0.idleConnectionTestPeriod}"
          p:initialPoolSize="${c3p0.initialPoolSize}"
          p:minPoolSize="${c3p0.minPoolSize}"
          p:maxPoolSize="${c3p0.maxPoolSize}"
          p:numHelperThreads="${c3p0.numHelperThreads}"
          p:preferredTestQuery="${c3p0.preferredTestQuery}"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!-- <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop> -->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.use_outer_join">true</prop>
                <prop key="hibernate.jdbc.fetch_size">30</prop>
                <prop key="hibernate.jdbc.batch_size">30</prop>
                <prop key="hibernate.jdbc.batch_versioned_data">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">
                    org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
                </prop>
                <prop key="hibernate.current_session_context_class">
                    org.springframework.orm.hibernate4.SpringSessionContext
                </prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
                <prop key="hibernate.search.default.directory_provider">filesystem</prop>
                <prop key="hibernate.search.default.indexBase">/JeefwLuceneIndexes</prop>
                <prop key="hibernate.search.default.refresh">1800</prop>
                <prop key="hibernate.search.default.indexwriter.max_merge_docs">100</prop>
                <prop key="hibernate.search.default.indexwriter.ram_buffer_size">64</prop>
                <prop key="hibernate.search.default.optimizer.operation_limit.max">1000</prop>
                <prop key="hibernate.search.default.optimizer.transaction_limit.max">100</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.jeefw.model</value>
            </list>
        </property>
    </bean>


    <bean id="informationService" class="com.jeefw.service.sys.impl.InformationServiceImpl"/>

    <bean id="indexingInformationJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
          p:targetObject-ref="informationServiceImpl"
          p:targetMethod="indexingInformation"/>

    <bean id="indexingInformationJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"
          p:jobDetail-ref="indexingInformationJob"
          p:cronExpression="0 0 2 * * ?"/>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false"
          p:triggers-ref="indexingInformationJobTrigger"/>
</beans>